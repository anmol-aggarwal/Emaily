const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const keys = require('../config/keys');

const User = mongoose.model('users');

passport.serializeUser((user, done) => {
  done(null, user.id);//this id is the id generated by mongodb
})

passport.deserializeUser((id, done) => {
  User.findById(id)
    .then((user) => {
      done(null, user);
    })
})

passport.use(new GoogleStrategy(
  {
    clientID: keys.googleClientID,
    clientSecret: keys.googleClientSecret,
    callbackURL: "http://localhost:5001/auth/google/callback",
    passReqToCallback: true
  },
  function (request, accessToken, refreshToken, profile, done) {
    User.findOne({ googleId: profile.id })    //always async when we reach out our db
      .then((existingUser) => {
        if (existingUser) {
          //already exists
          done(null, existingUser);
        }
        else {
          new User({ googleId: profile.id }).save()
            .then(user => done(null, user))
        }
      })

  }
)
);